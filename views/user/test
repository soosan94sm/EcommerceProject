
/////////////////////////////////////////
<%- include('../header')-%>

  <%- include('./partials/banner')-%>

    <div class="page-wrapper">
      <header class="header">


        <div class="header-middle sticky-header">
          <div class="container pt-5">


            <div class="header-right">


              <div class="dropdown cart-dropdown">


                <div class="dropdown-menu dropdown-menu-right">
                  <div class="dropdown-cart-products">


                    <div class="product">

                      <figure class="product-image-container">
                        <a href="product.html" class="product-image">
                          <img src="assets/images/products/cart/product-2.jpg" alt="product">
                        </a>
                      </figure>
                      <a href="#" class="btn-remove" title="Remove Product"><i class="icon-close"></i></a>
                    </div><!-- End .product -->
                  </div><!-- End .cart-product -->


                  <div class="dropdown-cart-action">
                    <a href="cart" class="btn btn-primary">View Cart</a>
                    <a href="checkout" class="btn btn-outline-primary-2"><span>Checkout</span><i
                        class="icon-long-arrow-right"></i></a>
                  </div><!-- End .dropdown-cart-total -->
                </div><!-- End .dropdown-menu -->
              </div><!-- End .cart-dropdown -->
            </div><!-- End .header-right -->
          </div><!-- End .container -->
        </div><!-- End .header-middle -->
      </header><!-- End .header -->

      <main class="main">
        <div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
          <div class="container pt-2">
            <h1 class="page-title">Checkout<span>Shop</span></h1>
          </div><!-- End .container -->
        </div><!-- End .page-header -->
        <nav aria-label="breadcrumb" class="breadcrumb-nav">
          <div class="container">
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="/">Home</a></li>
              <li class="breadcrumb-item"><a href="/category">Shop</a></li>
              <li class="breadcrumb-item active" aria-current="page">Checkout</li>
            </ol>
          </div><!-- End .container -->
        </nav><!-- End .breadcrumb-nav -->

        <section class="h-85 gradient-custom ">
          <div class="container py-0">
            <div class="row justify-content-center ">
              <div class="col-md-8">
                <div class="card mb-4">

                  <div class="card-body">

                    <div class="d-block my-3 p-3">
                      <button id="openAddModalBtn" class="btn btn-primary">Add Address here</button>
                    </div>
                    
                    <!-- Trigger Button for Editing Address -->
                    <div class="d-block my-3 p-3">
                      <button id="openEditModalBtn" class="btn btn-primary">Edit Address</button>
                    </div>

                    <% addressList.forEach(item=> { %>
                      <% const { name, address, phone, houseNumber, pincode, city, state, landmark, alternatePhone
                        }=item; %>
                        <div class="d-block my-3 p-3">
                          <div class="form-check form-check-inline mr-3">
                            <input id="cod" name="selectedAddress" type="radio" class="form-check-input" checked
                              value="<%= name %>,<%= phone %>,<%= address %>,<%= houseNumber %>,<%= pincode %>, <%= city %>, <%= state %>, <%= landmark %>"
                              required>
                            <label class="form-check-label" for="cod">
                              <%= name %>,<%= address %>,<%= houseNumber %>,<%= houseNumber %>, <%= pincode %>
                            </label>
                          </div>
                        </div>
                        <% }) %>
                  </div>
                </div>
              </div>

              <!-- <div>
                                        <strong>Total amount</strong>
                                        <strong>
                                          <p class="mb-0">(including VAT)</p>
                                        </strong>
                                      </div>
                                      <h4  class="mb-0 mt-2">&#8377; <span id="grand"><%=total %></span</h4> -->
              <aside class="col-lg-3">
                <div class="summary">
                  <h3 class="summary-title">Your Order</h3><!-- End .summary-title -->

                  <table class="table table-summary">
                    <thead>
                      <tr>
                        <th>Product</th>

                        <th>Total</th>

                      </tr>
                    </thead>

                    <tbody>
                      <% productData.forEach((item)=> { %>

                        <tr>
                          <td><a href="/admin/assets/uploads/<%=item.product.images[0]%>">
                              <%= item.product.productName %>
                            </a></td>

                          <td> &#8377;<%= item.product.price %>
                          </td>


                        </tr>





                        <% }) %>
                          <tr class="summary-total">
                            <td>Total:</td>
                            <td><span id="grand"><%=total %></span>
                            </td>
                          </tr><!-- End .summary-total -->
                    </tbody>
                  </table><!-- End .table table-summary -->
                  <form action="" method="post" id="paymentForm">
                    <h4 class="mb-3">Payment Details</h4>

                    <div class="accordion-summary" id="accordion-payment">



                      <div class="form-check form-check-inline mr-3">
                        <input id="cod" name="paymentMethod" type="radio" class="form-check-input" checked value="cod"
                          required>
                        <label class="form-check-label" for="cod">Cash on Delivery / Pay on delivery</label>

                      </div>
                      <div class="form-check form-check-inline">
                        <input id="online" name="paymentMethod" type="radio" class="form-check-input" value="online"
                          required>
                        <label class="form-check-label" for="online">Online Payment</label>
                      </div>


                    </div><!-- End .accordion -->

                    <button class="btn btn-primary btn-lg btn-block col-md-6 mx-auto check" type="submit">Checkout</button>
                   
                  </form>
                  </div><!-- End .summary -->
              </aside><!-- End .col-lg-3 -->
            </div>

            <div class="modal fade" id="offersModal" tabindex="-1" role="dialog" aria-labelledby="offersModalLabel" aria-hidden="true">
              <div class="modal-dialog" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="offersModalLabel">Offers & Coupons</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">
                   
                    <p>Here are some exciting offers and coupons:</p>
                    <!-- Add your offers and coupons content here -->
                    <div>
                      
      
                      <% coupon.forEach(item=>{ %>
                        <% if(total > item.minValue && total < item.maxValue){ %>
                        <hr>
                      
                        <div class="d-flex justify-content-between align-items-center mx-3 <%=item._id %>">
                          <div>
                        <strong>Coupon name : <%=item.couponName %></strong><br>
                        <strong>Offer :  <%=item.couponValue %> %</strong>
                        <p>Only applicable for &#8377; <%=item.minValue %> and more.</p>
                      </div>
                      <div>
                        <button class="btnStyle px-3 py-1 couponApply" data-couponId="<%=item._id %>" data-couponPrice="<%=item.couponValue %>" style="border-radius: 20px;"> Apply</button>
                      </div>
                      </div>
                      <hr>
                      <% } %>
                        <% }) %>
                    </div>
                  </div>
         

          </div>
        </section>
    </div><!-- End .page-content -->
    </main><!-- End .main -->
    <!-- Trigger Button -->
<!-- Trigger Button for Adding Address -->

<div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="errorModalLabel">Error</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        Error verifying payment.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal for Address -->
<div id="addressModal" class="modal">
  <div class="modal-content">
    <span class="close" id="closeModalBtn">&times;</span>
    <h2 id="modalTitle">Add Address</h2>
    <form id="addressForm">
      <!-- Address input fields go here -->
      <div class="form-group">
        <label for="street">Street:</label>
        <input type="text" id="street" name="street">
      </div>
      <div class="form-group">
        <label for="city">City:</label>
        <input type="text" id="city" name="city">
      </div>
      <!-- Add more input fields as needed -->

      <button type="submit" class="btn btn-primary" id="submitAddressBtn">Submit</button>
    </form>
  </div>
</div>

<!-- CSS for the Modal (place in your stylesheet or inline) -->
<style>
  /* The Modal */
  .modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto; /* Enable scroll if needed */
    background-color: rgba(0, 0, 0, 0.4); /* Overlay background */
  }

  /* Modal Content */
  .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px;
  }

  /* Close Button */
  .close {
    position: absolute;
    right: 20px;
    top: 10px;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
  }
</style>

<!-- JavaScript to control the modal -->
 <script>
   // Get references to the modal and buttons
  const modal = document.getElementById("addressModal");
  const openAddModalBtn = document.getElementById("openAddModalBtn");
  const openEditModalBtn = document.getElementById("openEditModalBtn");
  const closeModalBtn = document.getElementById("closeModalBtn");
  const modalTitle = document.getElementById("modalTitle");
  const addressForm = document.getElementById("addressForm");
  const submitAddressBtn = document.getElementById("submitAddressBtn");

  let isEditing = false;
  let editedAddressData = null;

  // Function to open the modal
  function openModal(isEdit, addressData) {
    isEditing = isEdit;
    editedAddressData = addressData;

    if (isEdit) {
      modalTitle.textContent = "Edit Address";
      // Pre-populate the form fields with existing address data
      document.getElementById("street").value = addressData.street;
      document.getElementById("city").value = addressData.city;
      // Add more lines to pre-populate other fields as needed
    } else {
      modalTitle.textContent = "Add Address";
      // Clear the form fields when adding a new address
      addressForm.reset();
    }

    modal.style.display = "block";
  }

  // Function to close the modal
  function closeModal() {
    modal.style.display = "none";
  }

  // Event listeners to open and close the modal
  openAddModalBtn.addEventListener("click", () => openModal(false, null));
  openEditModalBtn.addEventListener("click", () => {
    // Replace this with the data of the address you want to edit
    const sampleAddressData = {
      street: "Sample Street",
      city: "Sample City",
      // Add more fields as needed
    };
    openModal(true, sampleAddressData);
  });
  closeModalBtn.addEventListener("click", closeModal);

  // Event listener to handle form submission
  addressForm.addEventListener("submit", (event) => {
    event.preventDefault();
    
    // Get the form data
    const formData = new FormData(addressForm);
    const addressData = {
      street: formData.get("street"),
      city: formData.get("city"),
      // Retrieve more fields as needed
    };

    if (isEditing) {
      // Handle editing logic (e.g., send updated data to the server)
      console.log("Edited Address Data:", addressData);
    } else {
      // Handle adding logic (e.g., send new data to the server)
      console.log("New Address Data:", addressData);
    }

    closeModal();
  });
</script> 

<script>
  // JavaScript to show the modal when an error occurs
  function showErrorModal() {
      $('#errorModal').modal('show');
  }
  
  // Call this function to show the modal when an error occurs
  function showError() {
      showErrorModal();
  }
</script>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    
<script>
    
  document.getElementById("paymentForm").addEventListener("submit", function(event) {
       // Prevent the default form submission
       event.preventDefault();
       const total = document.getElementById('grand').innerText
     // console.log(total);
       // Get all radio buttons with the name "paymentMethod"
       let paymentMethodRadios = document.getElementsByName("paymentMethod");
       
       let paymentMode = document.querySelector('input[name="paymentMethod"]:checked').value;
        console.log(paymentMode); //i think it is no use
             
       const address = document.querySelector('input[name="selectedAddress"]:checked').value;
 
 
       
       // Loop through the radio buttons to find the selected one
       for (let i = 0; i < paymentMethodRadios.length; i++) {
         // console.log(paymentMethodRadios[i].value);
         if (paymentMethodRadios[i].checked) {
           // Print the value of the selected radio button
           // console.log("Selected Payment Method: " + paymentMethodRadios[i].value)
           // break; // Exit the loop once a selected radio button is found
           if(paymentMethodRadios[i].value === 'online'){
            $.ajax({
      url: '/createOrder',
      method: 'POST',
      dataType: 'json',
      data:{paymentMode,total,address},
      success: function(order) {
      
        var options = {
          key: 'rzp_test_qVYTkxDZgzRcZj',
          amount: order.amount,
          currency: order.currency,
          name: 'Ansa',
          description: 'Test Payment',
          order_id: order.id,
           handler: function(response) {
             $.ajax({
               url: '/checkout',
               method: 'POST',
               data:{paymentMode,total,address},
               success: function(data) {
                 if (data.success) {
                  // alert('Payment successful!');
                   window.location.href = "/confirm-order"; 
                 } else {
                   //alert('Payment failed!');
                 }
               },
               error: function() {
                 //alert('Error verifying payment.');
               }
             });
           }
         };
 
         var rzp1 = new Razorpay(options);
         rzp1.open();
         
       },
       error: function() {
        console.log("error")
       }
     });
     
           }
                    if(paymentMethodRadios[i].value === 'cod'){
           console.log('codeee');
           $.ajax({
               url: '/checkout',
               method: 'POST',
               data:{paymentMode,total,address},
               success: function(data) {
                 console.log(data);
                 if (data.success) {
                   //alert('Payment successful!');
                   window.location.href = "/confirm-order"; 
                 } else {
                   //alert('Payment failed!');
                 }
               },
               error: function() {
                 alert('Error verifying payment.');
               }
             });
         }
           
         }
 
       
     }
       // console.log(paymentMode);
     });
 </script>

 
    <%- include('../footer')-%>
    <div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel"
      aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="errorModalLabel">Error</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            Error verifying payment.
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Modal for Address -->
    <div id="addressModal" class="modal">
      <div class="modal-content">
        <span class="close" id="closeModalBtn">&times;</span>
        <h2 id="modalTitle">Add Address</h2>
        <form id="addressForm">
          <!-- Address input fields go here -->
          <div class="form-group">
            <label for="street">Street:</label>
            <input type="text" id="street" name="street">
          </div>
          <div class="form-group">
            <label for="city">City:</label>
            <input type="text" id="city" name="city">
          </div>
          <!-- Add more input fields as needed -->

          <button type="submit" class="btn btn-primary" id="submitAddressBtn">Submit</button>
        </form>
      </div>
    </div>
  
    <!-- CSS for the Modal (place in your stylesheet or inline) -->
    

    <!-- JavaScript to control the modal -->
    <!-- <script>
      // Get references to the modal and buttons
      const modal = document.getElementById("addressModal");
      const openAddModalBtn = document.getElementById("openAddModalBtn");
      const openEditModalBtn = document.getElementById("openEditModalBtn");
      const closeModalBtn = document.getElementById("closeModalBtn");
      const modalTitle = document.getElementById("modalTitle");
      const addressForm = document.getElementById("addressForm");
      const submitAddressBtn = document.getElementById("submitAddressBtn");

      let isEditing = false;
      let editedAddressData = null; -->

      // Function to open the modal
      function openModal(isEdit, addressData) {
        isEditing = isEdit;
        editedAddressData = addressData;

        if (isEdit) {
          modalTitle.textContent = "Edit Address";
          // Pre-populate the form fields with existing address data
          document.getElementById("street").value = addressData.street;
          document.getElementById("city").value = addressData.city;
          // Add more lines to pre-populate other fields as needed
        } else {
          modalTitle.textContent = "Add Address";
          // Clear the form fields when adding a new address
          addressForm.reset();
        }

        modal.style.display = "block";
      }

      //Function to close the modal
      function closeModal() {
        modal.style.display = "none";
      }

      // Event listeners to open and close the modal
      openAddModalBtn.addEventListener("click", () => openModal(false, null));
      openEditModalBtn.addEventListener("click", () => {
        // Replace this with the data of the address you want to edit
       
        openModal(true, sampleAddressData);
      });
      closeModalBtn.addEventListener("click", closeModal);

      // Event listener to handle form submission
      addressForm.addEventListener("submit", (event) => {
        event.preventDefault();

        // Get the form data
        const formData = new FormData(addressForm);
        const addressData = {
          street: formData.get("street"),
          city: formData.get("city"),
          // Retrieve more fields as needed
        };

        if (isEditing) {
          // Handle editing logic (e.g., send updated data to the server)
          console.log("Edited Address Data:", addressData);
        } else {
          // Handle adding logic (e.g., send new data to the server)
          console.log("New Address Data:", addressData);
        }

        closeModal();
      });
    </script>

    <script>
      // JavaScript to show the modal when an error occurs
      function showErrorModal() {
        $('#errorModal').modal('show');
      }

      // Call this function to show the modal when an error occurs
      function showError() {
        showErrorModal();
      }
    </script>
/////////////////////////
<%- include('../header')-%>
<style>
  /* The Modal */
  
  .modal {
    display: none;
    /* Hidden by default */
    position: fixed;
    /* Stay in place */
    z-index: 1;
    /* Sit on top */
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    /* Enable scroll if needed */
    background-color: rgba(0, 0, 0, 0.4);
    /* Overlay background */
  }

  /* Modal Content */
  .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px;
  }

  /* Close Button */
  .close {
    position: absolute;
    right: 20px;
    top: 10px;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
  }
</style>
  <%- include('./partials/banner')-%>

    <div class="page-wrapper">
      <header class="header">


        <div class="header-middle sticky-header">
          <div class="container pt-5">


            <div class="header-right">


              <div class="dropdown cart-dropdown">


                <div class="dropdown-menu dropdown-menu-right">
                  <div class="dropdown-cart-products">


                    <div class="product">

                      <figure class="product-image-container">
                        <a href="product.html" class="product-image">
                          <img src="assets/images/products/cart/product-2.jpg" alt="product">
                        </a>
                      </figure>
                      <a href="#" class="btn-remove" title="Remove Product"><i class="icon-close"></i></a>
                    </div><!-- End .product -->
                  </div><!-- End .cart-product -->


                  <div class="dropdown-cart-action">
                    <a href="cart" class="btn btn-primary">View Cart</a>
                    <a href="checkout" class="btn btn-outline-primary-2"><span>Checkout</span><i
                        class="icon-long-arrow-right"></i></a>
                  </div><!-- End .dropdown-cart-total -->
                </div><!-- End .dropdown-menu -->
              </div><!-- End .cart-dropdown -->
            </div><!-- End .header-right -->
          </div><!-- End .container -->
        </div><!-- End .header-middle -->
      </header><!-- End .header -->

      <main class="main">
        <div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
          <div class="container pt-2">
            <h1 class="page-title">Checkout<span>Shop</span></h1>
          </div><!-- End .container -->
        </div><!-- End .page-header -->
        <nav aria-label="breadcrumb" class="breadcrumb-nav">
          <div class="container">
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="/">Home</a></li>
              <li class="breadcrumb-item"><a href="/products">Shop</a></li>
              <li class="breadcrumb-item active" aria-current="page">Checkout</li>
            </ol>
          </div><!-- End .container -->
        </nav><!-- End .breadcrumb-nav -->

        <section class="h-85 gradient-custom ">
          <div class="container py-0">
            <div class="row justify-content-center ">
              <div class="col-md-8">
                <div class="card mb-4">

                  <div class="card-body">

                    <div class="d-block my-3 p-3">
                      <button id="openAddModalBtn" class="btn btn-primary">Add Address here</button>
                    </div>

                    <!-- Trigger Button for Editing Address -->
                    

                    <% addressList.forEach(item=> { %>
                      <% const { name, address, phone, houseNumber, pincode, city, state, landmark, alternatePhone
                        }=item; %>
                        <div class="d-block my-3 p-3">
                          <div class="form-check form-check-inline mr-3">
                            <input id="cod" name="selectedAddress" type="radio" class="form-check-input" checked
                              value="<%= name %>,<%= phone %>,<%= address %>,<%= houseNumber %>,<%= pincode %>, <%= city %>, <%= state %>, <%= landmark %>"
                              required>
                            <label class="form-check-label" for="cod">
                              <%= name %>,<%= address %>,<%= houseNumber %>,<%= houseNumber %>, <%= pincode %>
                            </label>
                            <div class="d-block my-3 p-3">
                              <a class="btn btn-primary mr-2" href="/editAddress?id=<%= item._id %>">Edit</a>
                            </div>
                          </div>
                        </div>
                        <% }) %>
                  </div>

                </div>
              </div>

              <aside class="col-lg-3">
                <div class="summary">
                  <h3 class="summary-title">Your Order</h3><!-- End .summary-title -->

                  <table class="table table-summary">
                    <thead>
                      <tr>
                        <th>Product</th>

                        <th>Total</th>

                      </tr>
                    </thead>

                    <tbody>
                      <% productData.forEach((item)=> { %>

                        <tr>
                          <td><a href="/admin/assets/uploads/<%=item.product.images[0]%>">
                              <%= item.product.productName %>
                            </a></td>

                          <td> &#8377;<%= item.product.price %>
                          </td>


                        </tr>





                        <% }) %>
                          <tr class="summary-total">
                            <td>Total:</td>
                            <td><span id="grand">
                                <%=total %>
                              </span>
                            </td>
                          </tr><!-- End .summary-total -->
                    </tbody>
                  </table><!-- End .table table-summary -->
                  <form action="" method="post" id="paymentForm">
                    <h4 class="mb-3">Payment Details</h4>

                    <div class="accordion-summary" id="accordion-payment">



                      <div class="form-check form-check-inline mr-3">
                        <input id="cod" name="paymentMethod" type="radio" class="form-check-input" checked value="cod"
                          required>
                        <label class="form-check-label" for="cod">Cash on Delivery / Pay on delivery</label>

                      </div>
                      <div class="form-check form-check-inline">
                        <input id="online" name="paymentMethod" type="radio" class="form-check-input" value="online"
                          required>
                        <label class="form-check-label" for="online">Online Payment</label>
                      </div>
                      <!-- <% if(user.wallet >= total){%>
                        <div class="form-check form-check-inline">
                          <input id="wallet" name="paymentMethod" data-wallet="<%=user.wallet %>" type="radio" class="form-check-input" value="wallet" required >
                          <label class="form-check-label" for="wallet">Wallet</label>
                        </div>
                        <% } %> -->

                    </div><!-- End .accordion -->

                    <button class="btn btn-primary btn-lg btn-block col-md-6 mx-auto check"
                      type="submit">Checkout</button>

                  </form>
                </div><!-- End .summary -->
              </aside><!-- End .col-lg-3 -->
            </div><div class="modal fade" id="successModal">
              <div class="modal-dialog">
                <div class="modal-content">
                  <!-- Modal Header -->
                  <div class="modal-header">
                    <h4 class="modal-title">Payment Successful</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                  </div>
            
                  <!-- Modal body -->
                  <div class="modal-body">
                    Your payment was successful. Thank you for your order!
                  </div>
            
                  <!-- Modal footer -->
                  <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                  </div>
                </div>
              </div>
            </div>

           
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#offersModal">
              Open Offers & Coupons
          </button>
          
          <!-- The modal code you provided -->
          <div class="modal " id="offersModal" tabindex="-1" role="dialog" aria-labelledby="offersModalLabel" aria-hidden="true">
              <div class="modal-dialog" role="document">
                  <div class="modal-content">
                      <div class="modal-header">
                          <h5 class="modal-title" id="offersModalLabel">Offers & Coupons</h5>
                          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                          </button>
                      </div>
                      <div class="modal-body">
                          <p>Here are some exciting offers and coupons:</p>
                          <!-- Add your offers and coupons content here -->
                          <div>
                              <!-- This part is populated dynamically using server-side templating -->
                              <% coupon.forEach(item => { %>
                                  <hr>
                                  <div class="d-flex justify-content-between align-items-center mx-3 <%=item._id %>">
                                      <div>
                                          <strong>Coupon name : <%=item._id %></strong><br>
                                          <strong>Offer : <%=item.couponValue %> %</strong>
                                          <p>Only applicable for &#8377; <%=item.minValue %> and more.</p>
                                      </div>
                                      <div>
                                        <button class="btnStyle px-3 py-1 couponApply" data-couponId="<%=item._id %>" data-couponPrice="<%=item.couponValue %>" style="border-radius: 20px;"> Apply</button>
                                      </div>
                                  </div>
                                  <hr>
                              <% }) %>
                          </div>
                      </div>
                  </div>
              </div>
          </div>
          <div class="col-md-12">
            <div class="card mb-4">
              <div class="card-header py-3">
                <div>
                 
                  <strong>Total amount</strong>
                  <strong>
                    <p class="mb-0" id="offer"></p>
                  </strong>
                  <strong>
                    <p class="mb-0">(including VAT)</p>
                  </strong>
                </div>
                <h4  class="mb-0 mt-2">&#8377; <span id="grand"><%=total %></span</h4>
              </div>
            </div>
          </div>
            </div>
          </div>
        </section>
    </div><!-- End .page-content -->
    </main><!-- End .main -->
  </div>
    <!-- Trigger Button -->
    <!-- Trigger Button for Adding Address -->

    <div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel"
      aria-hidden="true">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="errorModalLabel">Error</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            Error verifying payment.
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Modal for Address -->
    <div id="addressModal" class="modal">
      <div class="modal-content">
        <span class="close" id="closeModalBtn">&times;</span>
        <h2 id="modalTitle">Add Address</h2>
        <form id="addressForm">
          <!-- Address input fields go here -->
          <div class="form-group">
            <label for="street">Street:</label>
            <input type="text" id="street" name="street">
          </div>
          <div class="form-group">
            <label for="city">City:</label>
            <input type="text" id="city" name="city">
          </div>
          <!-- Add more input fields as needed -->

          <button type="submit" class="btn btn-primary" id="submitAddressBtn">Submit</button>
        </form>
      </div>
    </div>
  
    <!-- CSS for the Modal (place in your stylesheet or inline) -->
    

    <!-- JavaScript to control the modal -->
    <script>
      // Get references to the modal and buttons
      const modal = document.getElementById("addressModal");
      const openAddModalBtn = document.getElementById("openAddModalBtn");
      const openEditModalBtn = document.getElementById("openEditModalBtn");
      const closeModalBtn = document.getElementById("closeModalBtn");
      const modalTitle = document.getElementById("modalTitle");
      const addressForm = document.getElementById("addressForm");
      const submitAddressBtn = document.getElementById("submitAddressBtn");

      let isEditing = false;
      let editedAddressData = null;

      // Function to open the modal
      function openModal(isEdit, addressData) {
        isEditing = isEdit;
        editedAddressData = addressData;

        if (isEdit) {
          modalTitle.textContent = "Edit Address";
          // Pre-populate the form fields with existing address data
          document.getElementById("street").value = addressData.street;
          document.getElementById("city").value = addressData.city;
          // Add more lines to pre-populate other fields as needed
        } else {
          modalTitle.textContent = "Add Address";
          // Clear the form fields when adding a new address
          addressForm.reset();
        }

        modal.style.display = "block";
      }

      //Function to close the modal
      function closeModal() {
        modal.style.display = "none";
      }

      // Event listeners to open and close the modal
      openAddModalBtn.addEventListener("click", () => openModal(false, null));
      openEditModalBtn.addEventListener("click", () => {
        // Replace this with the data of the address you want to edit
       
        openModal(true, sampleAddressData);
      });
      closeModalBtn.addEventListener("click", closeModal);

      // Event listener to handle form submission
      addressForm.addEventListener("submit", (event) => {
        event.preventDefault();

        // Get the form data
        const formData = new FormData(addressForm);
        const addressData = {
          street: formData.get("street"),
          city: formData.get("city"),
          // Retrieve more fields as needed
        };

        if (isEditing) {
          // Handle editing logic (e.g., send updated data to the server)
          console.log("Edited Address Data:", addressData);
        } else {
          // Handle adding logic (e.g., send new data to the server)
          console.log("New Address Data:", addressData);
        }

        closeModal();
      });
    </script>

    <script>
      // JavaScript to show the modal when an error occurs
      function showErrorModal() {
        $('#errorModal').modal('show');
      }

      // Call this function to show the modal when an error occurs
      function showError() {
        showErrorModal();
      }
    </script>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    

      
<script>
  let couponId
  let amountAfterOffer 
  let walletAmount
  let amount
  const total = document.getElementById('grand').innerText
  const wallett = document.getElementById('wallet')
  console.log("wallet ",wallett);
  if(wallett !== null){
      walletAmount = wallett.getAttribute('data-wallet');
    //  console.log(walletAmount);
  }
  // const walletAmount = wallett.getAttribute('data-wallet');
  // console.log(walletAmount);

  if(total > 0 && (couponId !== undefined)){  
    document.querySelectorAll('.couponApply').forEach(button => {
    button.addEventListener('click', function() {
			 couponId = this.getAttribute('data-couponId');
			const couponPrice = this.getAttribute('data-couponPrice');
      console.log(couponId);
      $.ajax({
        method: 'POST',
        url: '/couponUpdate',
        data: { couponId },
        success: function(response) {
          console.log("AJAX POST request to /test-post was successful!");
           console.log("Response:-----", response);
           if(response.success){
            couponId= response.couponId
            console.log(couponId);
            const total = document.getElementById('grand')
            const para = document.getElementById('para')
            const offer = document.getElementById('offer')
            const val = total.innerHTML
            para.innerHTML=`Coupon Applied`
            para.style.color="green"
            let changedVal = val*couponPrice/100
             amountAfterOffer = val - changedVal
            console.log(changedVal);
            console.log("***********")
            console.log(amountAfterOffer);

            total.innerText = amountAfterOffer
            offer.innerHTML=`You saved &#8377; ${changedVal}`
            $('#offersModal').modal('hide');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
           }
          },
        error: function(error) {
          console.error("AJAX POST request to /test-post failed:", error);
        }
      })
    })
  })
}else{
    //alert('Payment can not be initiated!')
  }

    document.getElementById("paymentForm").addEventListener("submit", function(event) {
      event.preventDefault();
      
      console.log("couponId",couponId);
     

    
      let paymentMethodRadios = document.getElementsByName("paymentMethod");
      
      let paymentMode = document.querySelector('input[name="paymentMethod"]:checked').value;
        console.log(paymentMode); 
            
      const address = document.querySelector('input[name="selectedAddress"]:checked').value;


      
      // Loop through the radio buttons to find the selected one
      for (let i = 0; i < paymentMethodRadios.length; i++) {
        // console.log(paymentMethodRadios[i].value);
        if (paymentMethodRadios[i].checked) {
         
        if(paymentMethodRadios[i].value === 'cod') {
  console.log('codeee');
  console.log(amountAfterOffer);

  Swal.fire({
    title: 'Confirmation',
    text: 'Are you sure you want to proceed?',
    icon: 'question',
    showCancelButton: true,
    confirmButtonText: 'OK',
    cancelButtonText: 'Cancel'
  }).then((result) => {
    if (result.isConfirmed) {
      //  console.log(amountAfterOffer);
      // i will come back and correct the wallet amount updation on database
      if(amountAfterOffer !== undefined && couponId !== undefined){
         amount =amountAfterOffer
        console.log(paymentMode,amountAfterOffer,address);
      }else{
         amount = total
         couponId=""
        console.log(paymentMode,total,address);
      }
      
      $.ajax({
        url: '/checkout',
        method: 'POST',
        data: { paymentMode, total:amount, couponId,address },
        success: function (data) {
          console.log(data);
          if (data.success) {
            //alert('Order placed!');
            Swal.fire({
              icon: 'success',
              title: 'Success!',
              text: 'Order placed'
            });
            window.location.href = "/confirm-order";
          } else {
            //alert('Payment failed!');
          }
        },
        error: function () {
          //alert('Error verifying payment.');
        }
      });
    } else if (result.dismiss === Swal.DismissReason.cancel) {
      Swal.fire('Cancelled', 'Operation cancelled', 'error');
    }
  });
}else if(paymentMethodRadios[i].value === 'online'){
		Swal.fire({
title: 'Confirmation',
text: 'Are you sure you want to proceed?',
icon: 'question',
showCancelButton: true,
confirmButtonText: 'OK',
cancelButtonText: 'Cancel'
}).then((result) => {
if (result.isConfirmed) {
// Your code to execute when the user clicks "OK"
if(amountAfterOffer !== undefined){
         amount =amountAfterOffer
        console.log(paymentMode,amountAfterOffer,address);
      }else{
         amount = total
        console.log(paymentMode,total,address);
      }
$.ajax({
  url: '/createOrder',
  method: 'POST',
  dataType: 'json',
  data:{paymentMode,total:amount,address},

  success: function(order) {
  
	var options = {
	  key: 'rzp_test_qVYTkxDZgzRcZj',
	  amount: order.amount,
	  currency: order.currency,
	  name: 'Ansa',
	  description: 'Test Payment',
	  order_id: order.id,
	  handler: function(response) {
		$.ajax({
		  url: '/checkout',
		  method: 'POST',
		  data:{paymentMode,total:amount,address},
		  success: function(data) {
			if (data.success) {
			  Swal.fire({
		icon: 'success',
		title: 'Success!',
		text: 'Order placed',
	  });
				  //alert("Order placed")

			  window.location.href = "/confirm-order"; 
			} else {
			 // alert('Payment failed!');
			}
		  },
		  error: function() {
			//alert('Error verifying payment.');
		  }
		});
	  }
	};

	var rzp1 = new Razorpay(options);
	rzp1.open();
	
  },
  error: function() {
	//alert('Error creating order.');
  }
});
} else if (result.dismiss === Swal.DismissReason.cancel) {
// Your code to execute when the user clicks "Cancel" or outside the modal
Swal.fire('Cancelled', 'Operation cancelled', 'error');
}
});
	   

	  }else if(paymentMethodRadios[i].value === 'wallet'){
	  console.log('codeee');
    Swal.fire({
  title: 'Confirmation',
  icon: 'question',
  html: `<br>
    <p>Are you sure you want to proceed?</p><br>
    <p><strong>Wallet Balance: Rs.${walletAmount}</strong></p><br>
    <p>Remaining Balance: Rs.${walletAmount - total}</p>
  `,
  showCancelButton: true,
  confirmButtonText: 'OK',
  cancelButtonText: 'Cancel'
}).then((result) => {
if (result.isConfirmed) {
  if(amountAfterOffer !== undefined){
         amount =amountAfterOffer
        console.log(paymentMode,amountAfterOffer,address);
      }else{
         amount = total
        console.log(paymentMode,total,address);
      }
$.ajax({
		  url: '/wallet',
		  method: 'POST',
		  data:{paymentMode,total:amount,address},
		  success: function(data) {
			console.log(data);
			if (data.success) {
			  //  alert('Order placed!');
			  Swal.fire({
		icon: 'success',
		title: 'Success!',
		text: 'Order placed',
	  });
			window.location.href = "/confirm-order"; 
			} else {
			  Swal.fire({
		icon: 'fail',
		title: 'Fail!',
		text: 'Failed to place Order ',
	  });
			}
		  },
		  error: function() {
			Swal.fire({
		icon: 'fail',
		title: 'Fail!',
		text: 'Failed to place Order ',
	  });
		  }
		});
} else if (result.dismiss === Swal.DismissReason.cancel) {
// Your code to execute when the user clicks "Cancel" or outside the modal
Swal.fire('Cancelled', 'Operation cancelled', 'error');
}
});

	 
	}




        }
      }
      })  
    
  
</script>


    <%- include('../footer')-%>


 <% if (items.orderStatus !== 'delivered' && items.orderStatus !== 'cancel') { %>
                <a href="/cancel?id=<%= items._id %>&orderId=<%= productItem.orderId %>" class="btn btn-danger btn-sm">Cancel this delivery</a>
                <% } else if (items.orderStatus === 'cancel') { %>
                <button class="btn btn-secondary btn-sm" disabled>Cancelled</button>
                <% } else { %>
                <a href="/return?orderId=<%= productItem.orderId %>" class="btn btn-success btn-sm return">Return item</a>
                <% } %>






<tbody>
  <% if (items && items.length > 0) { %>
      <% items.forEach(item => { %>
          <% item.orderItem.forEach(orderItem => { %> <!-- Use 'orderItem' instead of 'orderItems' -->
              <tr>
                  <td style="color:#e9e5e5"><%= item.orderId %></td>
                  <td style="color:#e9e5e5"class="text-capitalize"><%= item.user.name %></td>
                  <td style="color:#e9e5e5"class="text-left">
                      <% if (orderItem.product && orderItem.product.length > 0) { %>
                          <%= orderItem.product[0].productName %>
                      <% } else { %>
                          Product Name Not Available
                      <% } %>
                  </td>
                  <td style="color:#e9e5e5"><%= item.paymentMethod %></td>
                  <td style="color:#e9e5e5"><%= item.purchaseDate.toLocaleDateString() %></td>
                  <td>
                      <button data-orderid="<%= item.orderId %>" class="btn btn-outline-primary update"><%= orderItem.orderStatus %></button>
                      <a href="/admin/order/admindetails?id=<%= item.orderId %>" class="btn btn-outline-primary">Details</a>
                  </td>
              </tr>
          <% }); %>
      <% }); %>
  <%